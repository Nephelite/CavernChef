17/5: 

Established the GitHub repo for Cavern Chef (30 min)

20/5:

Searched for assets to use on Itch.io (1h)

22/5:

Finally figured out how to push Unity Project to GitHub.
Added Stove Assets
Added Background Assets from Itch.io
Made first scene with grass BG and Stove foreground.
- Kevin (2 hours)

Added Food sprites from Itch.io
Created Wisp and FryingPan sprites
Figured out sorting layers
-Kevin (2-3 hours)

23/5:

Added a lot of prefabs
Adjusted the tilemaps to ensure grid generation is correctly alligned
Created a basic grid generator
Searched online for enemy pathing tutorials 
(Found mostly waypoint-based, useful for the tech demo but might not be
for the final product)
- Kevin (4 hours)

24/5:

Made path generation scripts, accounting for future features like
path randomisations. Currently predetermined for the sake of the demo.
- Kevin (3 hours)

25/5:

Implemented a basic UI with the following features:
-Text to display the amount of Repel Points (RP) left for use.
(RP is the economy for this game)
-Vertical scroll box with 1 temporary econ tower that can be selected.
- Kevin (4 hours)

Also:
Implemented tower placement after selecting it from the vertical scroll box.
- Kevin (3 hours)


26/5:
Tried to implement the wisps.
Added some scripts and set up the waypoints and make the wisps follow them.
Currently the wisp does not move and there is an unknown render texture error that
keeps appearing now. Will try to fix tomorrow
- Bryce (2 hrs)


27/5:
Added working Econ TRTs.
- Kevin (1 hour)

Quickly fixed the issue from yesterday with Kevin's help (Prefabs were missing in the Inspector for one of the scripts). 
Implemented enemy spawning. 
Implemented enemy waves. Needs bugfixing.
- Bryce (4.5 hours)

28/5:
Fixed enemy waves.
- Kevin (30 mins)

Implemented Basic Offense TRTs, and implemented a targetting system using a global enemy list.
Note: replace w Priority Queue eventually, priority based on distance to objectives.
Currrently no range system implemented. Future feature.
- Kevin (4 hours, started from 27/5)

Implemented a basic Main Menu and a Food Selection scene before the Tower Defense mode.
Textures to be replaced eventually, further down the line.
- Kevin (5 hours, most of the time spent on fiddling with screen sizes before eventually giving up)



29/5:
Made a bullet sprite for the basic turret.
Implemented basic turret firing bullets.
Implemented tracking, dmg, and killing effect of basic bullets.
- Bryce (6.5 hrs, 1 hr from yesterday)

Added the exit game functionalities.
Also added the exit game functionalities to the Tower Defense mode, as a means of ending the demo version being submitted for Milestone 1.
Fixed some bugs with the bullet travel, and other miscellaneous bugs.
-Kevin (1 hour)

31/5:
Created an algorithm that can easily generate an SSSP algorithm from our current needs.
Plannedd to be evolved into a psuedd-random path generator.
-Kevin (3 hours)

1/6 - 2/6:
Created the randomised path generation algorithm.
Bugs created: 
1. Creates dead ends
2. Intersecting paths are possible, esp with longer path generations
Possibly problematic if there are more than 1 spawn point, but not a concern for now
- Kevin (6 hours collectively across 1st and 2nd June)

2/6 - 4/6:
Created `EnemyList` class as a custom priority queue for tracking enemies in each wave to eventually replace the current array.
Created abstract class `Enemy` to eventually superclass Wispy.
- Bryce (5.5 hrs total, June 2 0.5 hrs + June 3 1.5 hrs + June 4 3.5 hrs)

4/6 - 5/6:
Created a fully functional enemy pathfinding script using A*.
Note: The code is a commented code block meant to be copied into objects using the algorithm.
- Kevin (12 hours collectively across 4th and 5th June)

5/6 - 7/6:
Replaced array in the internal representation of enemies in `EnemyList` class with a List.
Replaced the array in GlobalVariables.enemyList with the custom class `EnemyList`.
Completed and incorporated abstract `Enemy` class into current version.
Updated script for `TRTLookAtEnemy` to only look at enemies when they are in range
Updated movement of Wispies to follow the path generated by Kevin's code.
Somehow(???) cleared bugs from the new implementation, I hope.
- Bryce (6 hrs total, June 5 1.5 hrs + June 6 2.5 hrs + June 7 2 hrs)

8/6:
Added the basic versions of the caves, flooded caves, and magma cavern.
- Kevin (adding time spent editing, a total of 3 hours)

9/6:
Found/edited/made more enemy and food assets.
Added some enemy prefabs for each zone.
- Kevin (3 hrs)

9/6 - 12/6 morning:
Ideation for possible types of turrets.
Implementation of EnemyStatus class within Enemy.cs to handle interactions of turret abilities. To be incorporated.
Moved some fields from BasicOffenseTRT to the general TRT class to better follow OOP principles.
Renaming basic TRT to Fire Turret and other similar renamings.
- Bryce (4.5 hrs total, June 9 0.5 hrs + June 10 1 hr + June 11 2.5 hrs + June 12 0.5 hrs)

11/6: 
Created wisp movement and death spritesheets for each individual wisp type. 
Made a working animation for the slime.
- Kevin (6 hrs)

13/6:
Wisps now all properly animate for moving and dying
Death animations also don't impact the priority system for targeting.
- Kevin (3 hrs)
